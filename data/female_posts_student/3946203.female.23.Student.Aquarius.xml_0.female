


       
       I have been learning and working with ASP.NET state management for the past few days and although I find it complicated, but I know that I will benefit from it in creating more scalable and robust ASP.NET web applications.    A state are data or variables that needs to be shared across multiple users in a web application. It is more difficult to maintain the state of a web application because the HTTP is in its nature stateless, meaning that it is unable to keep track of what request is coming from which user to the web server. In ASP.NET, there is something called the Application State and the Session State. Application state are data that will be shared across multiple users in your application. The Application state is stored using the HttpApplicationStateclass in the System.Web namespace. Information that is stored in the Application state will be easily accessible by users of that application. Session state lets you maintain the state of each user of the application. It means that the web server must be able to keep track what request is coming from which user. ASP.NET provides the per-user state storage to store the sessions state information. Unlike the Application state, session state has to be enabled through the properties window in Visual Studio.NET before it can used.    
