

	 
      For all the Mac-o-philes out there, yesterday was a big day.  Yesterday, previews of the new "Tiger" OS were shown to developers at Apple's developer conference (WWDC).  Overall, I have to say I was pretty impressed.  The new Spotlight technology promises to make finding and correlating data on the old hard drive a lot easier.  The day before WWDC, users on MacRumors.com had the guilty pleasure of viewing some unauthorized "preview" screenshots of the Tiger OS.  One of the features whose authenticity was doubted most was the new Dashboard feature.  I know there are lots of Konfabulator fans, but anyone who knows me knows I have an extreme distaste for desktop widgets.  In fact, I believe desktop widgets are a littermate of the annoying yellow Office agent dog in Windows XP.  So it's pretty safe to say that I was praying that the new shots were faked.  Turns, out the screenshots were true.  The Dashboard works on the metaphor that we keep objects that we use often but not all the time within reach (or buried within reach in my case) in a top desk drawer.  Well, the Dashboard is a special "drawer" screen mode of Expose that is reached by a special keyboard stroke (or probably a mouse gesture as well).  Little Javascript driven widgets lay in the drawer and you can manipulate them and close the drawer once you are finished with a keystroke or mouse move.  Personally, I don't like the new feature.  IMHO, desktop widgets constitute a violation of many rules of good UI, which is especially tragic considering all the time and energy Apple has put into place into making sure their user experience guidelines are documented and adopted.  Widgets have 4 major problems:  1.  UI guidelines protect the user.    Developers should not have access to colors.  Anyone who looks at the Windows XP interface can tell you that.  XP, the first truly multicolored MS OS has red, blue, orange, green, and other colors thrown around in borderline random areas of the desktop.  It has the style sensibility of the late 80s when blinding your fellow man with swirls of neon color was the desired look.  The stereotypical computer geek is not an artist, and tends to have poor fashion sense bordering on the color blind.  I have seen hideous UIs that were borderline unusable using the common controls in both the Mac OS and in Windows.  We have problems as it is making user friendly UIs within the existing parameters.  Do you really want to give these people a blank palette?  2.  Widgets make the user experience inconsistent.    One of the beautiful things about Mac OS is that you can sit down at any Mac or Windows box and know how to interact with almost any element you see onscreen.  Buttons are clicked.  Mac programs almost always have a Preferences menu item.  There are visual cues in Windows that let you figure out what the keyboard shortcut is to particular functionality.  Forms are square, easily tile, and conserve screen space.    Widgets sacrifice all this consistency in favor of flashy looks.  I remember looking at QuickTime 4 and trying to figure out how to interact with it (especially the volume control).  Windows Media Player with its strange new skin is another example.  When the program is onscreen, it takes up way more screenspace than is necessary.  You can see spans of empty space used for nothing but just being there.  Even with visualizations turned off, the thing is monstrously huge in comparison with what could be done with a simple form.  I can see why Apple released the 30" display.  If you make extensive use of widgets, you'll need the extra space!  3.  Real life metaphors don't always translate very well to the computer screen.  Ok, once again, the Windows release of QuickTime 4.  This application was very memorable, mostly for the awful interface.  Apple attempted to make the player a true to life representation of a real player, down to a thumb wheel for the volume.  However, they did not take into account that humans interact with programs from the front.  Try to turn a scroll wheel on a device from the front without using the notches on the side.  I can almost guarantee you will throw down the device in frustration, as it just doesn't work well, especially for things requiring fine grained control like volume.  I had the same problem with QT4 and quit using QT for a long time afterwards due to the sour taste it left in my mouth.    Another example of failed real world metaphors are the Tablet PCs released by Microsoft.  My significant other has dissected this one in detail (even got quoted in a journal for his observations!).  To paraphrase him, the writing experience and interacting with the tablet is slow, inaccurate, and such a pain that most people revert to using laptop mode not long after buying their new tablets.  The beauty of standard controls is that they are carefully tested for ease of use, as these are core elements of the OS and the OS developers know better than to peeve their user base.  Until we come up with new human interfaces with computers where we can interact with programs from all 3 dimensions, the majority of most ported metaphors will probably fall flat in the usability department.  4.  Widgets are redundant and redundant.  If you look at the widgets at WWDC, there are items such as a calendar with the date and the calculator.  Personally, it makes me wonder how many calendars a person really needs.  The day is stated at all times in the top Menu bar.  If you have iCal in your dock, you can see the day number in the month.  If you need quick access to the calculator, you can set up keyboard commands to quick launch the calculator (at least in Windows).  Why do you need more instances of calendars to tell you the date and time?  The only thing I can think of that would be marginally useful is a world clock, but I would rather have that be visible at all times or accessible from the main desktop so I don't have to interrupt my typing to access the "drawer" of Dashboard and see what time it is in Nottingham or Australia.  My favorite pseudo-Widget is a tea timer called Cuppa.  It resides in the dock, provides a tiny, unobstrusive view of how long until my tea is done, then bounces in the dock unobstrusively and sounds a chime to alert me that my tea is done.  That is perfection.  A tiny, configurable program that doesn't interfere with my work, that acts predictably, and provides excellent visual cues in an ultra small package.  As you can see, I don't think Widgets are that good of an idea.  Apple has done us well so far with Jaguar and Panther, but I think they missed the mark with this new feature in Tiger.  Apple also had desktop widgets long ago before System 7 was released and they were deprecated.  I think someday in the future, they will probably be deprecated again as this new fad of real world metaphors comes and goes and people realize that the new metaphors are a lot more trouble than they are worth.
    
