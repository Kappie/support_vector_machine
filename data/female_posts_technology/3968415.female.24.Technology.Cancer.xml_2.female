


       
      It has been a while.   I took a 5.5 weeks break from work. Came back to a retreat. Another 2 days off. In addition, there were some birthday celebrations in between. That is like a 6-7 weeks break.   It took me a while to get my engine started! After today's meeting, I realise that I am in trouble! And my blood is boilling.   The new project I am thrown into is in ridiculous shape. Everything is in a mess. I suspect the initial testing wasnt done properly, change mangement wasnt in place, the project wasnt managed correctly and the people in the original team were clueless!   Below are my observations,   1. How can a system go to LIVE when it has evident bugs?   --> Someone actually said this, "Nah.. User wun use this one.."  *Scratch head* I mean why the hell provide the function when u know the user wun use it. And since it is provided, this means it is in the URS! Bloody hell!! Then someone must have wanted it andthis will be used!  And if it is NOT going to be used,why did u spend time working on it?  And since you have already spent time on it, whydid u produce a lousy piece of work?  There is no professionalism in this. This is so half-***ked!   2. How can someone make changes to the source codes without knowing what the hell is going on?  --> When we ask for some documents to explain what the system is all about. The only answers were,  " We made changes to it overnight."  " Existing ones are very outdated."  " We dun know what the actual logic is all about. The person who has made changes to it has left."  " Let's read the source codes."   I mean *duh!* We need the logic!! Do you mean u changed the codes without knowing whatthe change is?? And there must have been a triggering point to the change ya? No documentation, no email, no flowcharts?? *applause for making it this far*   Read the source codes!?? I mean what we see on the UI is the result of the codes ya? And the fact that we are asking for supporting documents is that the UI is grossly wrong and we need to find out what the hell it is sposed to be, so weare able tomake the correct change and to provide a solution.   3. How can we build on top of something so shaky?   The foundation is so weak! It is goin to CRUMBLE on us! I suggested to print out the entities in the memory to do the necessary comparison to make sure our foundation is correct first. I mean that should be the first cut to sieve out BUGs!! There needs to be a thorough clean up before we even move towards tracing real time updates and all the other good-to-haves that are built on top of this. Although they agree with me, they decided to move on cos they wanted to identify the bugs and then solve it ad-hoc whenever we encounter it. GREAT eh?   So in conclusion,   We are going to build on top of a system, which nobody knows what the hell it is sposed to do!!   :o) We are goin to be in for a good time.   Cheers   
     

    
