

    
       MetaData: 	Metadata is binary information describing your program that is stored either in a common language runtime portable executable (PE) file or in memory. When you compile your code into a PE file, metadata is inserted into one portion of the file, while your code is converted to Microsoft intermediate language (MSIL) and inserted into another portion of the file. Metadata stores the following information:  Description of the assembly.  	Identity (name, version, culture, public key).  	The types that are exported.  	Other assemblies that this assembly depends on.  	Security permissions needed to run.  Description of types.  	Name, visibility, base class, and interfaces implemented.  	Members (methods, fields, properties, events, nested types).  Attributes.  	Additional descriptive elements that modify types and members.   Assembly Manifest: Every assembly, whether static or dynamic, contains a collection of data that describes how the elements in the assembly relate to each other. The assembly manifest contains this assembly metadata. An assembly manifest contains all the metadata needed to specify the assembly's version requirements and security identity, and all metadata needed to define the scope of the assembly and resolve references to resources and classes. The assembly manifest can be stored in either a PE file (an .exe or .dll) with Microsoft intermediate language (MSIL) code or in a standalone PE file that contains only assembly manifest information.  
    
    
