

	 
      If you want to know how to write a webcrawler in a day, wiki crawler in a day, here it is.  Actually the goal was to find a set of words and their meanings, tech words mostly.  The source is embedded in my larger application, yet the application is so small that it wont be hard to find the relevent code.   urlLink WikiSearching Java Code   Here is the core :   StringBuffer _buf = new StringBuffer();         _buf.append("GET /wiki/Special:Search?search=");         _buf.append(URLEncoder.encode(_query, "UTF-8")                 + "=Go ");                            _buf.append(" HTTP/1.1\r\n");         _buf.append("Accept: text/html\r\n");         _buf.append("Referer: " + _refer + "\r\n");         _buf.append("Accept-Language: en-us\r\n");         _buf.append("User-Agent: Mozilla/4.0 (compatible; ");         _buf.append("MSIE 6.0; Windows NT 5.1; ");         _buf.append("Avant Browser [avantbrowser.com]; ");         _buf.append(".NET CLR 1.1.4322)\r\n");         _buf.append("Host: " + _host + "\r\n" + "Connection: close\r\n\r\n");                          String httpPost = _buf.toString();         System.out.print(".");                                                 try {              PrintWriter writer = new PrintWriter(_socket.getOutputStream(),true);                          writer.print(httpPost);             writer.flush();          } catch (Exception exception) {              throw new RuntimeException(exception);          } // end of the try - catch ...          BufferedReader bufferedReader = null;         try {              bufferedReader =                  new BufferedReader(new InputStreamReader(_socket.getInputStream()));          } catch (IOException ie) {              ie.printStackTrace();          } // end of the try - catch 
    
