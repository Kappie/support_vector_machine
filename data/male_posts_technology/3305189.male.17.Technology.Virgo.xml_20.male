

	 
        urlLink Ian Hickson  has been saying this for I don't even know how long. At first I disagreed, thinking that the more forwards-compatible we can get, the better. However, this morning (or was it yesterday evening?) I suddenly thought of something else: 

 In XHTML, it is completely valid to say the following: 

  <script type="text/javascript" src="myscript.js"/>  

 This opens and closes the  script  element, and after that line you can just continue with other stuff. However, that is not the same for HTML. The "/" at the end doesn't mean the tag gets closed. It actually means something else, and I forgot what. Anyway, for HTML you need the following: 

  <script type="text/javascript" src="myscript.js"></script>  

 So, although it is valid to use the "/" shortcut in XHTML, it doesn't have the same effect in HTML and therefore you need the extra  </script>  tag. 

 Ok, you  can  make XHTML backwards-compatible, but it isn't backwards-compatible by nature. In other words, you can also write valid XHTML and make it totally incompatible when sent as  text/html . Even an XML-enabled user agent will choke on this, simply because it isn't sent under the correct MIME-type. 

 So, what I am trying to say? Validation doesn't tell you if something is wrong. Something which will break in browsers will still validate as XHTML. 

 The solution? Use an HTML doctype when sending as  text/html  and only use XHTML when sending under a propper XML MIME-type. You have more reliable debugging when doing so. 

 Also note that, like I said, you  can  write backwards-compatible XHTML. You  can  (and it is still valid) to use  </script>  when writing XHTML. However, standard validation isn't enough now anymore. 

 Agree? Disagree? Comment! 

  Also, remember that in my example above  text/javascript  is actually not correct and it should be  application/x-javascript . However, this, like most things, doesn't work in Internet Explorer. But who cares, right?  
     
    
