

    
       I plan to get two tech releases done independent of the game and story concept. The first will consist of the very basic stripped-down engine with the tools needed to construct a game on top of it. The second release will be the same basic engine modified for crossplatform development.  These will be internal releases.   Tech Release 1 will consist of these features:     Buildable on Win32.  Mozilla SpiderMonkey JavaScript engine built with libraries.  Scripting engine allows reading and execution of script files referenced from entities and other scripts.  Basic API available for the scripts to access: Write message to player and change posititon of a Physicalobject.  Irrlicht 3d engine built with libraries.  Newton physics engine built with libraries.  A BSP rendering engine.  A FGD file containing the entities Particleeffect, Playerstart, Scriptarea and Physicalobject.  A entity reader reading the four entities from the BSP file.  A basic map containing a couple of rooms, textures and the four entities.  Mapping instructions for Hammer, QuArK or another mapping tool.  Two different models for Physicalobject which will be placed in the map with different physical properties.  Working entity Particleeffect: Places a particle generator, and reads attributes from a given file. File can be edited with the tool Particleeditor.  Working entity Scriptarea: An entity where scripts can be tied to onEnter and onExit. They trigger when other game objects enter/exit the area.  Working entity Playerstart: Defines where the player starts when this map is loaded and (re)started.  Working entity Physicalobject: Any object that obeys to the laws of the physics engine. Must be given a model and initial physical attributes (friction, inertia, etc). Ie. a box.  Player can move within the map, and is affected by the physics engine.   Tech Release 2 will be     Buildable on OS X.  Buildable on Linux.   We'll find out which direction we'll go after this. The engine should be mature enough for content to be created on it.  I should mention that I've gotten two people with me on this now: Tobias Johan will be a creative support and be in charge of the OS X port, while David will be a co-programmer and in charge of the Linux port.   
    
    
