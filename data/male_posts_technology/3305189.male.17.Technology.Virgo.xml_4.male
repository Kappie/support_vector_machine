

	 
       One thing I realize is that there is huge potential for standards-based work in this area. Getting pages to validate is important, because you never know how quirky the search engine's parsers are. It is also very important to use semantic markup. If you look around, you will see that most (if not all) of the top search engine optimizers know about semantic markup, even though many of them are still not really standards-aware. 

 One of the thing we search engine optimizers always look at is the  metadata .  meta  elements are not so important to Google anymore; however, they are still important to more primitive search engines. Therefore they must still be used. For Google, we (or at least  I ) make use of  urlLink  RDF  . 

 Not many people really know to what extent Google supports  RDF . However, we do know that the Googlebot is looking for  index.rdf  and  atom.xml  files. 

 I think the question is: Is Google looking for  index.rdf  to extract a feed out of it, or to extract metadata? 

  RDF  is the future of metadata. However, since Google is ignoring  meta  elements inside a page, why would it be looking at external metadata? 

 But yet we don't really know  urlLink Google is cooking  behind the scenes. I hope there will be more light shed on it into the future. 

 However, if Google (or for that matter of fact, any search engine) would ever support  RDF  metadata, the first thing to be supported would surely be  urlLink Dublin Core . I have set up a file using only a few Dublin Core elements for a client recently:  urlLink The Model Shipyard  RDF  metadata . 

 Note that in the above example for The Model Shipyard, the file is sent as  text/xml  since I wasn't really supposed to use server-side scripting and I don't think the server knows about  .rdf  file extensions yet. Normally, you would use  application/rdf+xml  for that. 

 Another example I can show you is for the front page of my mother's website:  urlLink  Joke van Niekerk 's Homepage Metadata in  RDF  . That is sent under the correct content type thanks to ASP.NET, and is also more extensive than the one for Shipyard. 
     
    
