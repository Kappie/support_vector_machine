


    

       

      So, there is a rather large and load discussion around the continued development of Gnome and how they should proceed. Most of it has been sparked by the fact that Novell now owns Ximian and Mono, and has alot invested in Gnome. Relevant links for the discussion would be  urlLink Miguel de Icaza's web log  and  urlLink Havoc Pennington's Homepage [article] .  I'd like to rant a bit over why, what and how the Linux Desktop Movement (tm) should proceed. :)  So, the focus should, IMO, be on three issues:  * Developer Support (includes ISV, community etc.) * Usability (includes ease-of use, nice GUI, GUI guidelines etc.) * Applications (includes os features, stand-alone apps, enterprise level stuff etc.)  Now, this pretty much covers everything you might say and I'd have to agree... But take a look at the sorting I've made. It's not by accident or random, it's purely by intent. If you focus mainly on developers and secondary on usability issues then the applications will come, trust me. Just look at Windows back in the early days! They focuses on usability (GUI vs. Commandline) and on developer tools (especially VB made a major difference here), and today they have the by far most successful platform in the world.  And their next step is Longhorn, and guess what they are focusing on then ? Thats right , developers and usability. They know that Applications will come if they can take care of the two first issues.   So how does the Open Source Community respond to this ? One thing is for certain, if we respond by splitting up (even more) or attacking each other we have a problem... We are already a major underdog, in the desktop world that is, and so we need to stand united in order to have a chance of success...   I'm a great believer in what Microsoft is doing, moving "everything" to the Managed Code sphere and letting developers pick their language of choice, but providing a stable, performant and easy to use Framework for them (the developers that is). I think the Open Source Community could benefit from the same change, and even more so if we could all agree on one platform/framework.   Obviously we can't just throw out all the great work that has been done already, that wouldn't do at all! We need a way to incorporate all the "old" code with the "new world" of Managed Code. And since there is such a wide array of programming languages, frameworks, platforms, etc out there we really need a way of combining them all. The three major frameworks in use today is of course Java, GTK and QT, and then there is Mono as the newcomer. So the easy solution would be to incorporate the QT and GTK somehow into Java and all is solved. But that's not reality at all...  You see when .Net was released some time ago and developers started to understand what it was all about we got very, very excited! Finally a powerful way to use OO programming, without all the hassel of C/C++ or the awkward Java tools available back then... Yes I'm talking about Forte and the likes, it was horrible to come from VB6 into the Java world, suddenly I had to spend more time figuring out "plumbing" stuff, such as classpaths and mounting and god knows what...   So what is my idea then ? More on that later, just now I have to attend an HCI lecture+lab. 

      
