


       
      Nature deals with breakdowns in a complex system with evolution, and a very important part of evolution is the extinction of particular species. It's a sort of backtracking mechanism that corrects an evolutionary mistake. The Internet is an ecology, so if you build a species on it that is vulnerable to a certain pathogen, it can very well undergo extinction. By the way, the species that go extinct tend to have limited genetic diversity.                                                                                                                    Bill Joy  I am reading about Bill Joy, who was referred by the Fortune Magazine as the  "Edison of Internet"  Quite a good tag, for he has invented vi editor, csh Sell of Unix, Berkeley Unix distribution from which Free BSD and Net BSD came forth scientist behind Java and Jini Technology.  His article   "Why future doesn't need us"  shows his concern about unprecedented technological progress , where robots overtake humans.  I was surprised to hear that Bill left Sun Microsystems, a company which he cofounded 21 years ago.   Here is the excerpt of what I read in the Fortune mag  Bill Joy says:  I'd divide it into six chunks. As an undergraduate at the University of Michigan, I did numerical supercomputing and got to program some of the early Crays. Then I went to Berkeley and started working on Unix and building Internet protocols into it. My third stage was when we started Sun and built workstations and a distributed network file system and the Sparc microprocessor.   I was all set to leave Sun in 1987 when the company entered into a contract with AT—which actually owned Unix—and asked me to completely rewrite it in a modular way. But I couldn't find the right programming language, so my fourth career didn't really go anywhere. Then, after the San Francisco earthquake in 1989, I moved to Aspen and started a research lab for Sun called Smallworks, where I messed around some more with the Sparc chip and some other odds and ends.   In 1994, when a large block of ten-year options vested, I was thinking about leaving Sun again, but then the web came along and [CEO Scott McNealy] asked me to stick around a little longer. So I re-enlisted for the second time. That turned out to be the fifth stage, when I worked on the Java programming language, the Jini and JXTA concepts [networking and peer-to-peer technologies, respectively], Java chips for cellphones and smart cards—all that J-stuff. And finally, what really sucked up a lot of time the past couple of years was the aftermath of my Wired article, when I decided to try to expand it into a book that warns about why biotech, nanotechnology, and robotics have the power to render human beings extraneous. That is what I'd have to call the sixth phase of my career.   But I also did other things on the side. I had a gallery in San Francisco that sold the work of untrained, "primitive" artists. I was on the board of the Oregon Shakespeare Festival for four or five years. I'm also really into architecture and architectural modeling on computers. I've worked with Christopher Alexander [the renowned Berkeley professor, artist, and author of The Pattern Language] and Richard Meier [who designed the Getty Museum in Los Angeles]. Great architects are the last of the purists. What they do is not derivative.   When I think of my own work, most of it is built upon the efforts of others. The Unix work I did was derived from the work of Bell Labs and was more like a remodel than new construction. I'd really like to go and do something that's more like Java—that starts from a clean sheet and that isn't required by its compatibility with something else to be so complicated. Unfortunately, too few people get to do that in our industry.    Why, really, did you leave Sun? To become more involved in public issues like these?   There's no ideal time to leave a company, but I feel now that all the projects and strategies at Sun are in good hands. Sure, I could've found another project that needed incubation. We had one to design a new kind of network data-storage architecture that involved 20 or 30 people that I could've stayed involved in. It doesn't have a code name that starts with a J, though.   The problem with big projects like Java or rewriting Unix or designing the Sparc chip is that they require a five-year commitment. So when you come right down to it, I had to decide, "Do I want to push this big rock up a hill again?" Not this time.   Bill Gates faced a similar choice with his Longhorn project. He probably has a lot of great ideas and all these brilliant people, but he also has this antecedent condition he has to take into account—keeping it somewhat in sync with the old Windows. So the beautiful vision may fail because it has to be compatible. I've often wondered why they can't, for once, do something new. I mean really, really new? But then, when I asked myself that same question, that's when I knew I had to leave Sun.         
     

    
