

    
       Its been a year since when I have started knowing about semantic web and things that it tries to achieve. Semantic Web looks like a grand vision in which we can have some sort of machine to machine communication on the web as contrast to human-machine communication - as is the world today.  To build this grand vision of semantic web, one must know what are ontologies. Ontologies provide the necessary glue to provide semantics. Ontologies can be as simple as a dictionary, thesaurus, taxonomy to a complex structure consisting of hundreds of concepts and relationships  properties existing between concepts which can be represented formally (by logic statements).  And then there are actual data instances which are then mapped to ontology concepts. And based on this one can do reasoning on data instances. People on the web have been trying to build complex and more complex ontologies to represent small to complex domains. And the people who build such ontologies argue that this is the way to go and they have their reservations what web ontology languages like OWL-DL or others cannot even express yet.   They make a case once we have the richness, once we have the annotations, we will be able to do much more! But what that much more is, no one seems to know yet!  To me the whole question of richness and putting more and more semantics looks just odd. Rather then thinking about richness or expressivity - why don't we put effort into which problem space do we want to solve? Why don't we build and show a small mini semantic web from small mini ontologies and show it can do that particular task well. And then build a case, as this mini semantic web can do things x and y but not z, so we need this level of richness. Working other way round looks pure speculation to me.  Some of the semantic applications that I see today, don't yet have a strong appeal to make people adapt this technology fast. Semantic Web is lacking strong business application cases, which solves some real practical problems. In my view, one needs to focus on real-life business cases which give a direct (may be small) but benefit to the end user. Secondly we need strong software engineering aspects in Semantic Web Systems. The way SQL databases are used today, or Java based middleware components or Projects like Lucene, we need strong off the shelf components , which developers can use straight off.  For example, if someone wants to today build a website which tracks user behaviour and then analyses his interests and then provide recommendation, then there are very few general purpose components available to help one build this. Anyone who wants to provide such a utility needs to think everything from scratch.   To be able to make applications more intelligent, a strong focus on off the shelf, logic based software engineering components have to be supported.  Semantic Web Vision is grand and I would like to see that happen. Only time can tell about what it achieves. A small mini semantic web is what we need sooner rather than later!   
    
    
