

	 
      I recently had to find a way of streaming Excel files from an FTP server that was hidden behind a firewall. The environment was Java, J2EE, servlets, struts, JBoss. The principle parts of the solution rely only on servlets and Java though...oh and  urlLink commons net  from Apache/Jakarta which provides the FTP client. I used the  urlLink FileZilla  FTP server to help in testing. The first step is to create an instance of the FTPClient then use it to connect and login to the FTP server:    FTPClient client = new FTPClient(); client.connect(host); client.login(user, pass)   Next we need to move to the directory where the file to be downloaded lives:   client.changeWorkingDirectory(remoteDirectory);   The FTP client provides a way of obtaining an input stream for the file on the FTP server:   InputStream in = client.retrieveFileStream(filename);   Then we use the following magic incantation to set the HTTP headers on the response (HTTPServletResponse). Apparently this forces most browsers to pop up the save as window rather than trying to display the document using a built in renderer:   response.setHeader("Content-Type", "application/x-download"); response.setHeader("Content-Disposition", "attachment; filename=\""+filename+"\"");   Next we copy the file from input stream (FTP server) to the output stream (back to the client):   byte[] buffer = new byte[4096]; int bytesRead = 0; OutputStream out = response.getOutputStream(); while ( (bytesRead = in.read(buffer, 0, buffer.length)) != -1 ) {   out.write(buffer, 0, bytesRead);   out.flush(); }   Finally let's tidy up by logging out from the FTP server and closing the connection plus close the output stream:   client.logout(); client.disconnect(); out.close();    
     
    
