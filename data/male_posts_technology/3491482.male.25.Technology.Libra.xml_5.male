


    

       After sending someone a Gmail invitation in exchange for  urlLink something small , they asked if I worked at Google.  I am not sure what prompted this inquiry, but coincidentally I had just gotten through the interview process at Google.  This young aspiring computer scientist, still in High School, wanted to know what it took to get a job at Google. Even though I was not successful in landing a job there, having studied Computer Science for the last 8 years and now entering the job market myself, I started to think about all the right things someone could do to increase their chances of finding gainful employment, at Google or elsewhere.

  

Getting into Google isn't easy. %It's probably the most difficult employer to get a job with at the moment. %I just graduated with a Masters Degree and with research experience on various problems common to Internet search engines and they still didn't hire me. Google wants the best of the best and there is no formula that will make you the cream of the crop. However, if you want to increase the chances of getting hired by anyone notable, learn from others successes and mistakes and use the following 10 steps as a guide in your journey. 

 

 Make sure you know what you're getting into ahead of time. 

  Take any AP Math or C.S. classes your high school offers   Start puzzle solving.  Many common Computer Science problems relate to puzzles in some way, so it's nice to be familiar with the problem solving process as early as possible.   Keep your GPA up and try to get into on of the  urlLink Top 30 C.S. Schools . If you can only get into schools ranked 50th or lower, you may want to re-think your major, at this moment, there just isn't much capacity in the industry for the un-washed masses at smaller un-ranked schools.  Get high marks on your programming assignments   start early  work in the shared lab to learn from others    Once you know the basics, try hard for internshipnships or college work that involves programming.  Look at or hack on an Open Source project in your spare time     Start small with what you know best   Keep track of what you contribute   Network and make friends in the community.     Choose your upper division classes carefully, they will shape what you can specialize in later on. Stay away from Computation Theory unless you plan to move on to a Ph.D. Take a software engineering course if it's offered, they're ten times more useful than any theory course.    In your senior (college) year, ask around your department to see if you can help a professor on any research project.  It will give you great experience and is good resume padding.   Apply early to the large companies.  The top 10 employers hire a majority of fresh graduates and are the most willing to invest in your future.  Smaller companies are primarily looking for experienced employees who won't require any training.   

    

    
