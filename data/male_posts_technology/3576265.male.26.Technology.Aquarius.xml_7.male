

     
       urlLink Enterprise Directory Services in Linux  (link via  urlLink Rajesh )    An enterprise directory is a repository of concrete and metadata objects which describe the relationships between all of the objects in a computationalecosystem. Examples of concrete data objects include usernames, passwords, computer names, printer names, IP addresses, home directories, and so on. In general, these are objects you can see, touch, or manipulate directly.   The other set of objects managed by a directory are almost all "metadata"--literally "data about data." Metadata objects don't have any meaning unto themselves. Some aggregate concrete objects. Others describe relationships: to a concrete object, to a concrete object's attributes, or to other metadata objects. Examples of directory metadata objects include groups of users or groups of computers, organizational units such as the marketing department, access control lists, password expiration times, computer configurations, software configurations, application license keys and end-users rights identifiers, print queue descriptions, campus locations, office/cubicle numbers, phone number data, and even relationships between enterprise  applications that need to talk to each other.  A fully developed directory service contains enough information to allow an IT staff to manage totally an infrastructure from the infrastructure's configuration to the day-to-day operational data needed for simple tasks: from allowing users to print to the right printers to complex tasks like holding credentials and data transformation rules used by applications. It must also allow for the delegation of roles and responsibilities so that interns can't destroy enterprise databases or modify accounts but senior sysadmins aren't clearing paper jams from print queues either.    Enterprise Directory is handy when it comes to store user details in big Enterprises. I have written a few web services for Ldap related functions like authentication, authorization etc. Basically it's a JNDI methods exposed as a web service using JAX-RPC. I have to find some time to prepare a readme for those web services and post it here also. Will be doing soon. 
     
    
