


     

      I finally got my MDE project:   We run some large image processing tasks that run over many processors.  We've developed our own code to distribute computations over several Unix systems, but it's really out of date.  In particular, we need to take advantage of the compute power in Linux clusters.  We have our own small cluster and we would liek to exploit the capabilities of the large cluster in the Center for Parallel Computing.  One of my students provided the following request.  I think this would make a great senior design project with real applicability in the commercial world....   How about a tool set for running background C code or MatLab jobs.  Kind of like the launch program, but for use on our local Athlons.  A script would detect what machines are idle and launch jobs in a joblist serially.  Alternatively, and even better, they could get an account at the Center for Parallel Computing for the Athlon clusters.  These clusters use SMP parallel computing additions to the C language.  For independent C processes like our tracking, it would not be that hard to write scripts that modify the C code so it can run on these Athlon clusters, and maybe even automatically launch it and give feedback in the process.  So users can run independent C code on these systems without having to learn the SMP additions or details about the parallel cluster.  Automatic transfer of files without interactive authentication and big/little endian compensation may pose some challenges.  This is a seriously under-developed project description.  We are going to have a meeting with the professor that suggested this project to get some solid details.  The cool part about this professor is that he works in the biomedical engineering department.  My bio degree will make it easier to get in his head.

     

    
