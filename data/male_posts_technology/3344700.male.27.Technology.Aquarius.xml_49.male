

						
						   The .NET Framework 2.0 introduces enhancements across the .NET Framework. Windows client application development will be simplified through new controls and designer features, while the introduction of "ClickOnce" technology will dramatically ease Windows client application deployment. ASP.NET 2.0 introduces a collection of new features that refine Web application development and radically reduce coding effort. Other enhancements include more productive ADO.NET data access, support for the latest Web services standards, and expanded functionality for device-based development.   Common Language Runtime 2.0    Generics . Generics are classes and methods that work uniformly on values of different types and can greatly improve developer productivity by boosting code reuse.   Edit and Continue . The feature that made Visual Basic “RAD” is now in the core CLR, enabling developers to halt program execution, change a line of code, and continue running it without a full recompilation.   Performance and Load Time . The CLR now loads more quickly and takes up less memory footprint.    Windows Forms 2.0    Application Deployment . Windows Forms 2.0 introduces “ClickOnce,” which makes it simple for developers to package and deploy applications and simplifies the inclusion of pre-requisites in the installation package. ClickOnce further provides a simple way for administrators and users to deploy and update applications.   Visually Stunning Presentation . Windows Forms 2.0 brings together the capability to build applications that look like Microsoft Office and increases flexibility and control over how you can position controls on the forms. It includes a new grid control, a Sound Player control, a Web Browser control and an Active Document Host control. Beyond that, in order to make your application look more like Microsoft Windows or Office, we have made Windows Forms controls render with visual styles by default, and we have created a new menu, toolbar, and status bar family of controls called ToolStrips.    ASP.NET 2.0    Productivity and Customizability . ASP.NET 2.0 includes support for membership (user name/password credential storage) and role management services. The personalization service enables quick storage/retrieval of user settings and preferences, facilitating rich customization with minimal code. Master Pages now enable flexible page UI inheritance across sites. Augmenting all these infrastructure features are more than 45 new server controls in ASP.NET 2.0 that enable powerful declarative support for data access, login security, wizard navigation, image generation, menus, treeviews, portals, and more.    UI Adaptability . All standard ASP.NET 2.0 controls are now built with a rich UI adapter extensibility architecture that enables customization of output for different browsers and devices. All built-in ASP.NET controls with the   prefix are now mobile enabled in Whidbey, which allows developers to automatically target more than 300+ unique devices that support a variety of different markup standards (WAP/WML, XHTML Mobile, cHTML, etc).    Administration and Management . ASP.NET 2.0 includes configuration management APIs, enabling developers to create, read, and update Web.config and machine.config configuration files and an admin tool that plugs into the existing IIS Administration MMC, enabling an administrator to graphically read or change any setting within our XML configuration files. It also includes a new application deployment utility that will enable both developers and administrators to precompile a dynamic ASP.NET application prior to deployment protecting your source code. Finally, ASP.NET 2.0 provides health-monitoring and tracing support to enable administrators to be automatically notified when an application on a server starts to experience problems.    Speed and Performance . ASP.NET 2.0 is 64-bit enabled so it can take advantage of the full memory address space of new 64-bit processors and servers. ASP.NET 2.0 also includes automatic database server cache invalidation enabling developers to cache database-driven pages and partial page content and have ASP.NET automatically invalidate these cache entries and refresh the content whenever the back-end database changes.   

						
