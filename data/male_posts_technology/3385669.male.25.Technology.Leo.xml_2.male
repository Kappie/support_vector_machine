


       
      What a crazy world (computer'ly speaking) we live in.  This last two weeks I have been learning several  different programming languages. It struck me how many there are out there.  Here is a short list starting with the ones I am familiar with (to any degree)(also scripting/interpreted languages are included).  Familiar: C, C++, Java, *Basic*, HTML, Python, PHP, Perl, Shell*,  Prolog, Ada, ASM*, XML, *SQL, Turing, OOTuring, ...  Not Familiar: Ruby, SmallTalk, Tcl/Tk, D, C#, Lisp, Delphi, Pascal,  Eiffel, Fortran, JavaScript, Modula-*, Objective-C, Scheme,  Simula, ...  For a more complete list see   urlLink here  [cui.unige.ch] or  urlLink here  [directory.google.com] or   urlLink here  [www.hypernews.org].  As you can see there are way too many for anybody to  know all by themselves. (Note to those who do: You are WASTING your life!!!)  The point of this blog is to discuss my views on the level of the language.    [My Computer Backgroud (skip-able :o)] Most people who know me associate me with the C language  for one reason or another. (That is to say, if you know  my in a computer programming way :o) I find this funny  since by no means did I start programming anywhere near C. When I was a youngling just starting to learn the ropes  on my families 8088 (two 5 1/4" floppies, w00t!!) I  tinkered with QuickBasic to no avail.  I had no references  that I could understand nor anyone to ask if I got stuck.   This stopped me from getting anywhere.  When I started high-school we didn't even have computers in the typing lab.  They were actual typewriters until nearly the end of the year.  The tenth graders were able to take a computers course in the computer lab but not us sorry niners.  The following year I was disappointed again because the programming section of the computer course was about a week long at the end of the semester.  We  started to learn Turing which is a relatively good language to learn since it has a very easy to use screen graphics  component the get students excited about programming.  (Worked for me) During that one week I was able to get a  pixel to bounce around the screen, random color patterns, and a really basic version of the windows lines screen saver.  I can't remember exactly but I believe I took  computers again every year which included slightly more advanced programming concepts and unfortunately the same language.  We did hashing, automata, drag'n'drop, etc. Essentially we pushed Turing to it's absolute limits (on the 386's we had).  Within this time I was able to buy a 486 with DOS 5 and Windows 3.1 but still no internet. In my grade eleven year the school purchased a copy of  VisualBasic 4.0 but had no idea what to do with it so a friend and I both installed it at home (Hi Kev :o) and learned all about event driven, modular and object-oriented programming.  VisualBasic 4.0 was certainly not the tool that .Net is so it was a frustrating time.  The internet had also come to town and I was hooked up to a local  provider on my 33.6 modem.  Insert some experience with bad  web design and those terrible this is me pages similar to   urlLink this  [ahewgill.no-ip.com]. But Worse. [End Bio]  Well that is enough for today. If you are interested keep reading. Also I will eventually get to the low vs high level language discussion.  Where I describe ASM vs C vs C++ vs VisualBasic vs Python.  Those that are asleep at this point should probably find another blog to read, cause my content ain't a changin'.  
     

    
