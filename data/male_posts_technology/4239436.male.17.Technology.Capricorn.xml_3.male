


     

      PHP incorporates powerful and fast date and time functionality. In this article Ryan gives us the low down on PHP's various functions to manipulate the time and date with ease. Today's web sites try to offer a wide variety of useful data and information to the viewer. This is often what makes a web site more appealing than flashy graphics and cheesy animations. In fact, sometimes it is the attention to subtle detail that helps the web developer take that extra step into making a site appear more professional.    One simple way to add a professional detail to your web site is to post the current date and time within your web page. As insignificant as this might sound, it is a very commonly used way to show visitors that your site is slightly ahead of the curve. 										 The following basic PHP tutorial will show you how to use a few PHP functions to retrieve date and time information from your web server and display them neatly on your web site.   We Have A  										Problem:  No matter which operating system you are running your web server and PHP on, the procedure for gathering the current date and time is the same. The first problem is that the returned value is fairly cryptic.  									For example, the following PHP code:      <?php    echo   time  ();   ?>     Will quickly  										translate into:       Also Note: 	 Though this may not be very user friendly, it is an accurate measure of the date and time. This numeric date and time format originates from the fact that all Unix servers tell time by counting the number of seconds that have passed since 12:00 a.m. on January 1, 1970. All we need to do is learn how to display the above information in a way that makes sense to our site visitors.   Fixing The Problem:  Using PHP to convert the Unix timestamp into something more understandable is just a matter of employing the proper function. This tutorial will cover the use of a variety of basic functions available for this task.  The most commonly used function is date(). As you might expect, this function is fairly customizable. Customization is achieved through PHP's recognition of a variety of characters submitted in the format string. Below are just a few common characters, for a complete list of them, visit the PHP   						 urlLink  documentation   website.       D: day of the week     F: the month     h: hour, 12-hour format     H: hour, 24-hour format     i: minutes     l: day of the week     Y: year     										If we combine some of this knowledge into  										PHP code, the following:        <        ?php    echo   date  (  "l F d Y h:i"   ,  time  ());   ?       >       										Should give a result similar to:    Monday August Mon 2004 03:42    Conclusion:  Obviously this makes considerably more sense than the previous Unix timestamp. The result could be further improved through the addition of punctuation. When additional text is introduced into the format string it is important to remember to use a backslash to comment it out. Otherwise, your text will be recognized as part of the special character string.   urlLink continued story... 

     

    
