

     
      In efforts to provide a standardised definition for the term "MDA tool", the OMG lists exploded overnight to the tune of 57 new messages this morning. OK, its not a big explosion, but its a spike in the traffic of these particular lists. I apologise in advance if non-OMG-connected people are a little confused by this. The basic summary is, I guess, that certain parties (whose names I neither recall nor care to recount) advocate a very flexible view of the term, specifically to include any tool which generates code. In my observation, the last thing the discussion needs is another post on the list, so I'll put my opinion here. Basically, the biggest problem I see with the whole discussion is that a number of people believe that "code is a model". This is a pleasant but dangerous fiction, to be engaged in only by academics and other hand-waving types. This is comparable to, but I would argue worse than, saying that code is an object (or set of objects), since models are, as structures go, just extrapolations of objects, in that they represent systems of objects. Also, one should be careful to say that (with due respect to Kerry, who said this probably better than I will) we believe that code  can be represented as  a model. However, this is  not the same thing  as saying that code  is  a model. Another problem I see is that people on the list seem to be confusing the term "MDA" with "useful". A C++ (or any other programming language) compiler is hella useful in an MDA context, but that doesn't make it an MDA tool. No-one would consider the hard-disk controller a Java tool, but it's pretty handy when you're doing Java development. Furthermore, the analogy that may or may not exist between programming language compilation and model transformation should, like the consideration of code as model, be reserved for the hand-wavers.  
     
    
