


       
      Faced a peculiar problem.....here goes....  Working on a Unix System,  Doing a "ps -aef" on the prompt returns all the running processes. Something Like this:       UID   PID  PPID  C    STIME TTY      TIME CMD =====================================     root     0     0  0   Jun 18 ?        0:01 sched     root     1     0  0   Jun 18 ?        3:16 /etc/init -     root     2     0  0   Jun 18 ?        0:01 pageout     root     3     0  3   Jun 18 ?       2899:18 fsflush     root   235     1  0   Jun 18 ?        0:01 /usr/lib/sendmail -bd -q15m     root   182     1  0   Jun 18 ?        1:13 /usr/sbin/cron     root   305     1  0   Jun 18 ?        0:00 /usr/lib/saf/sac -t 300     root    48     1  0   Jun 18 ?        0:00 /usr/lib/devfsadm/devfseventd 	root  3397     1  0   Aug 08 ?       331:30 /prud/portal/weblogicnew/jdk131_06/bin/../bin/sparc/native_threads/ja     root  1553     1  0   Aug 08 ?       2177:00 /prud/portal/weblogicnew/jdk131_06/bin/../bin/sparc/native_threads/ja    iuser 29300     1  0   Aug 26 ?       269:42 /prud/portal/weblogicnew/jdk131_06/bin/../bin/sparc/native_threads/ja     Notice in the last 3 entries, the CMD ie the full command is not printed, a truncated line (till the maximum limit) is printed.     I was searching for a way which will print the full command line and not the truncated one. Tried all the operators which were suggested in the man page for ps.     Then after 4-5 hours of hunting on the net, I found this:     The conventional ps is the one which lies in /bin     There is another ps and that is in /usr/ucb/      Now the command /usr/ucb/ps -auxww returns the same stuff as above but with the complete (long listing) of the command line.     Therefore the last line in the output of /bin/ps -aef becomes the following:  	USER       PID %CPU %MEM   SZ  RSS TT       S    START  TIME COMMAND ========================================================= 	iuser    29300  0.0  0.55384020296 ?        S   Aug 26  0:35 /prud/portal/weblogicnew/jdk131_06/bin/../bin/sparc/native_threads/java ScheduleTimer  	So now I can do a grep on the string "ScheduleTimer" to find out my process which I was not able to do earlier.  	Nice little stuff ...   :)  	Later.
     

    
