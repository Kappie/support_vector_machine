

	 
       Excerpts from Paul Graham's ' Great Hackers ' essay:    "I've seen occasional articles about how to manage programmers. Really there should be two articles: one about what to do if you are yourself a programmer, and one about what to do if you're not. And the second could probably be condensed into two words: give up."  "Really good hackers are practically self-managing. The problem is, if you're not a hacker, you can't tell who the good hackers are. A similar problem explains why American cars are so ugly. I call it the design paradox. You might think that you could make your products beautiful just by hiring a great designer to design them. But if you yourself don't have good taste, how are you going to recognize a good designer?"  "Working on nasty little problems makes you stupid. Good hackers avoid it for the same reason models avoid cheeseburgers."  "One place this happens is in startups. At our startup we had Robert Morris working as a system administrator. That's like having the Rolling Stones play at a bar mitzvah. You can't hire that kind of talent. But people will do any amount of drudgery for companies of which they're the founders."  "They really seemed to believe this, and I think I know why. I think what a lot of VCs are looking for, at least unconsciously, is the next Microsoft. And of course if Microsoft is your model, you shouldn't be looking for companies that hope to win by writing great software. But VCs are mistaken to look for the next Microsoft, because no startup can be the next Microsoft unless some other company is prepared to bend over at just the right moment and be the next IBM."  "So who are the great hackers? How do you know when you meet one? That turns out to be very hard. Even hackers can't tell. I'm pretty sure now that my friend Trevor Blackwell is a great hacker. You may have read on Slashdot how he made his own Segway. The remarkable thing about this project was that he wrote all the software in one day (in Python, incidentally). For Trevor, that's par for the course. But when I first met him, I thought he was a complete idiot. He was standing in Robert Morris's office babbling at him about something or other, and I remember standing behind him making frantic gestures at Robert to shoo this nut out of his office so we could go to lunch. Robert says he misjudged Trevor at first too. Apparently when Robert first met him, Trevor had just begun a new scheme that involved writing down everything about every aspect of his life on a stack of index cards, which he carried with him everywhere. He'd also just arrived from Canada, and had a strong Canadian accent and a mullet."  "With hackers, at least, other hackers can tell. That's because, unlike novelists, hackers collaborate on projects. When you get to hit a few difficult problems over the net at someone, you learn pretty quickly how hard they hit them back. But hackers can't watch themselves at work. So if you ask a great hacker how good he is, he's almost certain to reply, I don't know. He's not just being modest. He really doesn't know.  "If there is a Michael Jordan of hacking, no one knows, including him."     Greg Knauss 's rebuttle found on  waxy.org  :    You know what a hacker is? It's someone who enjoys solving problems. Great hackers do it elegantly. Good hackers do it at all. How they do it is irrelevant, and it certainly has nothing to do with what language they choose or what OS they run or if they're politically correct or not. To claim otherwise is arrogant, narrow-minded foolishness.  The fact that I'm learning C# and Windows.Forms does not make me any less of a hacker. In fact, it makes me more of one, because I'm able to solve a problem I couldn't with all the Python and Linux in the world. Oh, but I forgot: hackers only solve the problems that interest them, if they're presented in the right way and in the right environment. Because hackers are special.    also found on  waxy.org  :     Joshua  pointed out that while it may seem that every smart person I know is using open-source tools, it's a product of observational bias. Open-source programmers hang out with other open-source programmers. I don't know many Windows applications developers, so I've never met a Windows super-genius. But they exist, and to say they don't is a form of technophobic racism. 
    
