


       
      Here is the design0.1 for the online backup that I am going to present to monty and brian during the UC2004.   ================================ MyISAM  1. Data files.(MYD)  Method 1-> Separate file or Separate table that contains the updates done during the backup mode. Method 2-> Each table.MYD will contain some area that contains the updates done in that table. Method 3-> Each Row can have some thing like backup ptr (rollback pointer)...   2. Index files.(MYI)  Method 1->Have separete index file during the backup mode. Method 2-> When ever a index is deleted.. We will not remove from MYI file we will just update FRM file. So When a new index is added information is only added to the MYI file so only the information added will be inconsistent. which will made to ignore after the recovery. But information added becomes consistent it will not be a snapshot backup. When ever a index is modified.. I guess it will be considered as a delete and a add.. If not we should consider it as a delete and add during the backup mode.  3. Schema files.(FRM) Method 1 -> Have a separate file during the backup mode.   InnoDB  Method 1-> Have a separete log file or table space or buffer in the existing table space that contains all the updates done during hte backup mode.While coming back to the normal mode. after backup all the update logs or buffer blocks of upodate information can be applied over the innodb data table space to get the information.  Method 2-> We continue to write the data to the table space. Implement the mechanism that is done by the innodb hotbackup tool during the recovery. It might not be a snapshot backup I guess.  Method 3-> Similar to the multiversioning that is implemented in InnoDB to get the consistent reads.We implement multiversioning to get consistent backup. We will have an extra column in each table called backup pointer that points to Null in normal mode. When backup mode is being set all the backup pointers will be modified to point to the consistent row data at the time of snapshot.  =============================================  BTW  urlLink Data mining  looks cool..  And this guy looks cool in those areas....    
     

    
