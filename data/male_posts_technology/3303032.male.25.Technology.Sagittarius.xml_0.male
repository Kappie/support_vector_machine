

	 
      Okay, here's a good javascript we used at work a few days ago to end-around a problem we were running into.  I'll post the code, then the breakdown of what the code does.    (javascript start and end tags have been removed, on account of stupid blogger script.  Will write my own webpage someday, when I have time...)  	 		var strname = location.href; 		var pos1 = strname.indexOf(".asp");  		var pos2 = strname.indexOf(".asp");  		var part1 = strname.substring(0,pos1); 		var part2 = part1 + "_report"; 		var part3 = strname.substring(pos2); 		var part4 = part2 + part3;		 		document.write("View Printable Report".link(part4)) 	  Here was the dilemma.  We had a form online that we needed to link to a 'printable version.'  Since all the data was coming from the same database, all we needed to do was send the users to a different address.  Problem was, we coudln't hard-code the address because, depending on where the user was logged in, they could be hitting it from a different address.  We needed a script that would grab the current address from the browser, clip it, and insert '_report' into a specific place in the middle of the address.    Here's the breakdown:  var strname = location.href;  //This gives the variable 'strname' the value of the address in the browser.    var pos1 = strname.indexOf(".asp");  //This tells the script that the variable 'pos1' is everything included in 'strname' up to '.asp' in the address.  Basically it says "Hey, stop taking data when you hit '.asp' (which is where we needed to do the clip.  var pos2 = strname.indexOf(".asp");  //I needed a second variable at the same place, in order to tell the script, after I've added in my string to the address, to tell it where to pick up and use the rest of the address.  Trust me, it'll make sense.  var part1 = strname.substring(0, pos1);  //Names 'part1' as everything up to '.asp' in the address bar  var part2 = part1 + "_report";  //Actually adds '_report', the data I needed to add into the string, into the address  var part3 = strname.substring(pos2);  //Tells the string now to start up again, with the '_report' added in  var part4 = part2 + part3;  //Tells the machine to add the first half "http://somename.keylogic.com/_report" to the rest of the address ".asp?cgi=somelocation"  document.write("View Printable Report".link(part4))  //Tells the machine that the hyperlink for 'View Printable Report' goes to the variable named in 'part4'  Basically writes the completed hyperlink, with the added part.   This is handy to allow users to grab an address, especially if the address is housed in older asp or cgi, where each user's id is stored in the address, but you want to do other, more dynamic things with that user's info without lots of database coding.  Javascript is the duct tape of the internet.
    
