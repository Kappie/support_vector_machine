

       
       
 
 
 
  A Truely Excellent piece of work. As far as i am concerned, this is simply THE best practice for returning Data From WebServices....Read on:   
  There are many reasons why developers don't use the  XPathDocument  and  XPathNavigator  APIs and resort to  XmlDocument  instead. I outlined some ofthem with regards to querying functionality inmy posts about   how to take advantage of XPath expression precompilation   , and    how to get an  XmlNodeList  from compiled expressions compilation   .   
     XPathNavigator  is a far superior way of accessing and querying data because it offers built-in support for XPath querying independently of the store, which automatically gain the feature and more importantly, because it abstracts the underlying store mechanism, which allows multiple data formats to be accessed consistently. The XML WebData team has seriously optimized the internal storage of  XPathDocument , which results in important improvents both in loading time and memory footprint, as well as general performance.This was possible because the underlying store is completely hidden from the developer behind the  XPathNavigator  class, therefore, even the most drastic change in internal representation does not affect current applications.    
  However, some useful features of the  XmlDocument  and  XmlReader  classes are not available. Basically, I've created an  XmlReader  facade over the  XPathNavigator  class, which allows you to work against either an streaming or a cursor API. I'll discuss how the missing features are enabled by the use of the new XPathNavigatorReader  class, part of the opensource    Mvp.Xml project   . ......  
  ALSO SEE:    How to return well-formed XML from WebServices without loading XmlDocuments: from XmlReader and XPathNavigator     
 
 
  
       
    
